<?xml version="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<xs:simpleType name="ProperName">
		<xs:restriction base="xs:string">
			<xs:whiteSpace value="collapse"/>
			<xs:pattern value="([A-Z0-9][A-Za-z0-9\-']* ?)+"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Year">
		<xs:restriction base="xs:gYear">
			<xs:minInclusive value="1950"/>
			<xs:maxInclusive value="1970"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="SongLength">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Short"/>
			<xs:enumeration value="Medium"/>
			<xs:enumeration value="Long"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="SongTime">
		<xs:union memberTypes="xs:duration SongLength"/>
	</xs:simpleType>
	<xs:element name="Title" type="ProperName"/>
	<xs:element name="Year" type="xs:gYear"/>
	<!--Change the content model of the Song element
	 so that it contains an Artists element in place of the
	  Artist element.-->
	<xs:element name="Artist" type="ProperName" />
	<xs:element name="Length" type="SongTime" />
	<xs:element name="Song">
		<xs:complexType>
		<!--Modify the schema so that the Song
		 element's children can appear in any order.-->
			<xs:all>
				<xs:element ref="Title"/>
				<xs:element ref="Year"/>
				<xs:element name="Artists">
				  <xs:complexType>
				    <xs:sequence>
				    <!--Make the Artists element allow for one or more
				     child Artist elements. Note that the Artist element
				      is already declared globally.-->
    				  <xs:element ref="Artist" maxOccurs="unbounded"/>
            </xs:sequence>
				  </xs:complexType>
        </xs:element>
        <!--Make the Length element optional.-->
				<xs:element ref="Length" minOccurs="0"/>
			</xs:all>
		</xs:complexType>
	</xs:element>
</xs:schema>
